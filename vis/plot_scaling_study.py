import matplotlib.pyplot as plt
import json
import csv

# visualization_times = {
#     "80": 0.3756274700164795,
#     "69": 0.292883038520813,
#     "102": 0.42606005668640134,
#     "22": 0.16531851291656494,
#     "13": 0.13185725212097169,
#     "58": 0.2658009767532349,
#     "71": 0.3332383394241333,
#     "98": 0.4154426097869873,
#     "40": 0.296095609664917,
#     "17": 0.1491626977920532,
#     "84": 0.3897449016571045,
#     "26": 0.17547252178192138,
#     "106": 0.4381768465042114,
#     "44": 0.22133543491363525,
#     "8": 0.11886827945709229,
#     "75": 0.3090539455413818,
#     "32": 0.22488801479339598,
#     "112": 0.40786707401275635,
#     "79": 0.33466856479644774,
#     "90": 0.3820885181427002,
#     "48": 0.23565266132354737,
#     "4": 0.0944340705871582,
#     "123": 0.4898917436599731,
#     "88": 0.346429705619812,
#     "61": 0.2716817378997803,
#     "50": 0.34911212921142576,
#     "116": 0.4621271133422852,
#     "36": 0.23749380111694335,
#     "94": 0.3540777683258057,
#     "54": 0.2753653287887573,
#     "65": 0.30758717060089114,
#     "78": 0.35224831104278564,
#     "33": 0.19725558757781983,
#     "113": 0.45847933292388915,
#     "91": 0.38343627452850343,
#     "5": 0.09566423892974854,
#     "49": 0.26681602001190186,
#     "89": 0.376300311088562,
#     "60": 0.2985036849975586,
#     "51": 0.2719182729721069,
#     "117": 0.4825527906417847,
#     "37": 0.21271023750305176,
#     "95": 0.4185608148574829,
#     "55": 0.2802585601806641,
#     "64": 0.31077330112457274,
#     "81": 0.3921689987182617,
#     "103": 0.3881399631500244,
#     "23": 0.20717504024505615,
#     "68": 0.3007203102111816,
#     "59": 0.35678093433380126,
#     "12": 0.12938761711120605,
#     "70": 0.2973982572555542,
#     "99": 0.3978935718536377,
#     "41": 0.24218909740447997,
#     "16": 0.17355120182037354,
#     "85": 0.36671383380889894,
#     "27": 0.17005329132080077,
#     "107": 0.42267909049987795,
#     "9": 0.10720183849334716,
#     "45": 0.2723252296447754,
#     "74": 0.38752448558807373,
#     "93": 0.358666205406189,
#     "31": 0.21134562492370607,
#     "111": 0.4249303340911865,
#     "7": 0.1413565158843994,
#     "120": 0.43218245506286623,
#     "62": 0.3463719606399536,
#     "109": 0.39449026584625246,
#     "29": 0.2367992877960205,
#     "18": 0.1575080156326294,
#     "53": 0.2513843059539795,
#     "124": 0.5129226446151733,
#     "97": 0.3742124795913696,
#     "115": 0.42281532287597656,
#     "35": 0.19773709774017334,
#     "57": 0.25733137130737305,
#     "66": 0.3548161029815674,
#     "101": 0.4056349992752075,
#     "21": 0.1841583251953125,
#     "83": 0.32899410724639894,
#     "10": 0.12250549793243408,
#     "39": 0.2107684373855591,
#     "119": 0.4210108518600464,
#     "72": 0.3479717969894409,
#     "43": 0.21905858516693116,
#     "14": 0.1364856481552124,
#     "25": 0.22103161811828614,
#     "105": 0.41412930488586425,
#     "87": 0.3901935338973999,
#     "47": 0.23305091857910157,
#     "76": 0.35142247676849364,
#     "100": 0.3741369009017944,
#     "20": 0.15987696647644042,
#     "82": 0.44771034717559816,
#     "11": 0.12605648040771483,
#     "73": 0.32410712242126466,
#     "38": 0.20450708866119385,
#     "118": 0.47222774028778075,
#     "42": 0.21675024032592774,
#     "15": 0.13237354755401612,
#     "24": 0.16252803802490234,
#     "104": 0.43297040462493896,
#     "86": 0.3653825521469116,
#     "46": 0.28169586658477785,
#     "77": 0.38911340236663816,
#     "92": 0.3468016147613525,
#     "30": 0.22104876041412352,
#     "110": 0.4192875862121582,
#     "6": 0.11074984073638916,
#     "121": 0.47775003910064695,
#     "108": 0.47665867805480955,
#     "28": 0.17910501956939698,
#     "63": 0.2928809404373169,
#     "52": 0.24055736064910888,
#     "19": 0.17370824813842772,
#     "96": 0.3933911085128784,
#     "114": 0.40785951614379884,
#     "34": 0.19247839450836182,
#     "56": 0.30073659420013427,
#     "67": 0.36679635047912595,
# }

# embedding_times = {
#     "80": 0.21583120822906493,
#     "69": 0.209218168258667,
#     "102": 0.21567189693450928,
#     "22": 0.2147878646850586,
#     "13": 0.2104083776473999,
#     "58": 0.21440258026123046,
#     "71": 0.20924687385559082,
#     "98": 0.2160729169845581,
#     "40": 0.22005281448364258,
#     "17": 0.21629483699798585,
#     "84": 0.2091686248779297,
#     "26": 0.2095186471939087,
#     "106": 0.21320102214813233,
#     "44": 0.2100229024887085,
#     "8": 0.21351914405822753,
#     "75": 0.21796422004699706,
#     "32": 0.21639637947082518,
#     "112": 0.2185741424560547,
#     "79": 0.21075689792633057,
#     "90": 0.2132496118545532,
#     "48": 0.21367473602294923,
#     "4": 0.21777818202972413,
#     "123": 0.20919501781463623,
#     "88": 0.2177271604537964,
#     "61": 0.21005599498748778,
#     "50": 0.222534441947937,
#     "116": 0.20933685302734376,
#     "36": 0.20891180038452148,
#     "94": 0.2131908655166626,
#     "54": 0.2146019697189331,
#     "65": 0.2183069944381714,
#     "78": 0.20935194492340087,
#     "33": 0.2148205518722534,
#     "113": 0.2148536205291748,
#     "91": 0.22105448246002196,
#     "5": 0.2133414030075073,
#     "49": 0.21647090911865235,
#     "89": 0.21519243717193604,
#     "60": 0.21021707057952882,
#     "51": 0.21596696376800537,
#     "117": 0.21129579544067384,
#     "37": 0.21320114135742188,
#     "95": 0.21003518104553223,
#     "55": 0.20900769233703614,
#     "64": 0.21691625118255614,
#     "81": 0.21872498989105224,
#     "103": 0.21577792167663573,
#     "23": 0.21243155002593994,
#     "68": 0.20949926376342773,
#     "59": 0.21784112453460694,
#     "12": 0.20892658233642578,
#     "70": 0.21061294078826903,
#     "99": 0.21188170909881593,
#     "41": 0.21321024894714355,
#     "16": 0.21848933696746825,
#     "85": 0.21333761215209962,
#     "27": 0.20938630104064943,
#     "107": 0.20887446403503418,
#     "9": 0.2090815544128418,
#     "45": 0.212178635597229,
#     "74": 0.21303822994232177,
#     "93": 0.21238653659820556,
#     "31": 0.20894966125488282,
#     "111": 0.2096492290496826,
#     "7": 0.20921244621276855,
#     "120": 0.21708526611328124,
#     "62": 0.2160494089126587,
#     "109": 0.21102001667022705,
#     "29": 0.20926759243011475,
#     "18": 0.2161621332168579,
#     "53": 0.21144065856933594,
#     "124": 0.20930736064910888,
#     "97": 0.21153457164764405,
#     "115": 0.21636028289794923,
#     "35": 0.21715068817138672,
#     "57": 0.21823520660400392,
#     "66": 0.21056730747222902,
#     "101": 0.21344833374023436,
#     "21": 0.2096132755279541,
#     "83": 0.2095874309539795,
#     "10": 0.21847548484802246,
#     "39": 0.21311347484588622,
#     "119": 0.2148897171020508,
#     "72": 0.21947934627532958,
#     "43": 0.20925726890563964,
#     "14": 0.20972864627838134,
#     "25": 0.21785569190979004,
#     "105": 0.21202328205108642,
#     "87": 0.21505773067474365,
#     "47": 0.21776859760284423,
#     "76": 0.2095418930053711,
#     "100": 0.2093637466430664,
#     "20": 0.2093437671661377,
#     "82": 0.21120119094848633,
#     "11": 0.21523489952087402,
#     "73": 0.21312325000762938,
#     "38": 0.20942361354827882,
#     "118": 0.20928630828857422,
#     "42": 0.21168406009674073,
#     "15": 0.20987234115600586,
#     "24": 0.2136014938354492,
#     "104": 0.21695592403411865,
#     "86": 0.21805403232574463,
#     "46": 0.209885573387146,
#     "77": 0.21036958694458008,
#     "92": 0.20979821681976318,
#     "30": 0.21304047107696533,
#     "110": 0.2095294713973999,
#     "6": 0.2132819652557373,
#     "121": 0.21584029197692872,
#     "108": 0.21328530311584473,
#     "28": 0.2142414093017578,
#     "63": 0.21553032398223876,
#     "52": 0.20935919284820556,
#     "19": 0.21713666915893554,
#     "96": 0.2200719118118286,
#     "114": 0.21794531345367432,
#     "34": 0.21366651058197023,
#     "56": 0.2153792142868042,
#     "67": 0.20929508209228515,
# }

# similarity_computation_times = {
#     "80": 0.5356143712997437,
#     "69": 0.5441251516342163,
#     "102": 0.5385089635848999,
#     "22": 0.5384287118911744,
#     "13": 0.5407568931579589,
#     "58": 0.5351285457611084,
#     "71": 0.5421204328536987,
#     "98": 0.5369026184082031,
#     "40": 0.5364985704421997,
#     "17": 0.5372251272201538,
#     "84": 0.5438050985336303,
#     "26": 0.5417992830276489,
#     "106": 0.5396339654922485,
#     "44": 0.5424407005310059,
#     "8": 0.5397135972976684,
#     "75": 0.5362582683563233,
#     "32": 0.5371450662612915,
#     "112": 0.5348840951919556,
#     "79": 0.5406769037246704,
#     "90": 0.5392320871353149,
#     "48": 0.5389114618301392,
#     "4": 0.5363383769989014,
#     "123": 0.5444464206695556,
#     "88": 0.5381886243820191,
#     "61": 0.5410767793655396,
#     "50": 0.5377064228057862,
#     "116": 0.5432440280914307,
#     "36": 0.5430036544799804,
#     "94": 0.5403544902801514,
#     "54": 0.5412384748458863,
#     "65": 0.5375463485717773,
#     "78": 0.5419601917266845,
#     "33": 0.5385890245437622,
#     "113": 0.5383487701416015,
#     "91": 0.5364184379577637,
#     "5": 0.5391522884368897,
#     "49": 0.5369828462600708,
#     "89": 0.5352092981338501,
#     "60": 0.543965196609497,
#     "51": 0.5355337142944336,
#     "117": 0.5418793439865113,
#     "37": 0.5395539045333863,
#     "95": 0.5423608303070069,
#     "55": 0.5437251329421997,
#     "64": 0.535694932937622,
#     "81": 0.5377865076065064,
#     "103": 0.5370630264282227,
#     "23": 0.5349669218063354,
#     "68": 0.5408368587493897,
#     "59": 0.5381087541580201,
#     "12": 0.5443653106689453,
#     "70": 0.5405157804489136,
#     "99": 0.5388315916061401,
#     "41": 0.5393121719360352,
#     "16": 0.5360970020294189,
#     "85": 0.5413185358047485,
#     "27": 0.5431639909744262,
#     "107": 0.5430841207504272,
#     "9": 0.5427616596221924,
#     "45": 0.5404343843460083,
#     "74": 0.5393922090530395,
#     "93": 0.5400334596633911,
#     "31": 0.5429229021072388,
#     "111": 0.5433239221572876,
#     "7": 0.5425206661224365,
#     "120": 0.5360167503356934,
#     "62": 0.5374663829803467,
#     "109": 0.5422807931900024,
#     "29": 0.5436452388763428,
#     "18": 0.5357754707336426,
#     "53": 0.5414790391921998,
#     "124": 0.5442049741744995,
#     "97": 0.538992190361023,
#     "115": 0.5352898836135864,
#     "35": 0.5367420434951782,
#     "57": 0.537866473197937,
#     "66": 0.5409968614578247,
#     "101": 0.5397937059402466,
#     "21": 0.5417192697525024,
#     "83": 0.54356529712677,
#     "10": 0.5373053789138794,
#     "39": 0.5401934146881103,
#     "119": 0.5413990974426269,
#     "72": 0.536177396774292,
#     "43": 0.5426808357238769,
#     "14": 0.5409169435501099,
#     "25": 0.538028335571289,
#     "105": 0.5387501001358033,
#     "87": 0.5354516983032227,
#     "47": 0.5366616249084473,
#     "76": 0.5420403957366944,
#     "100": 0.5428429126739502,
#     "20": 0.5434038877487183,
#     "82": 0.5415591716766357,
#     "11": 0.5359359502792358,
#     "73": 0.5394726991653442,
#     "38": 0.5422005891799927,
#     "118": 0.5438851118087769,
#     "42": 0.5401134967803956,
#     "15": 0.5442855596542359,
#     "24": 0.5350481510162354,
#     "104": 0.536822509765625,
#     "86": 0.5379481077194214,
#     "46": 0.5390722990036011,
#     "77": 0.5405967950820922,
#     "92": 0.5426007032394409,
#     "30": 0.5398737192153931,
#     "110": 0.5416391611099243,
#     "6": 0.539953637123108,
#     "121": 0.5373862266540528,
#     "108": 0.5402743816375732,
#     "28": 0.5411584615707398,
#     "63": 0.535855770111084,
#     "52": 0.5434840440750122,
#     "19": 0.537626314163208,
#     "96": 0.5365789413452149,
#     "114": 0.5382686853408813,
#     "34": 0.5386699676513672,
#     "56": 0.5353708267211914,
#     "67": 0.544045090675354,
# }

# sim2 = {
#     "80": 2.3150444030761717e-05,
#     "69": 2.2959709167480468e-05,
#     "102": 2.3436546325683593e-05,
#     "22": 2.446174621582031e-05,
#     "13": 2.2935867309570313e-05,
#     "58": 2.3150444030761717e-05,
#     "71": 2.3126602172851562e-05,
#     "98": 2.353191375732422e-05,
#     "40": 2.5391578674316406e-05,
#     "17": 2.3412704467773438e-05,
#     "84": 2.2959709167480468e-05,
#     "26": 2.307891845703125e-05,
#     "106": 2.3126602172851562e-05,
#     "44": 2.3055076599121094e-05,
#     "8": 2.3055076599121094e-05,
#     "75": 2.322196960449219e-05,
#     "32": 2.3436546325683593e-05,
#     "112": 0.0001966238021850586,
#     "79": 2.2959709167480468e-05,
#     "90": 2.3555755615234374e-05,
#     "48": 2.5773048400878905e-05,
#     "4": 2.307891845703125e-05,
#     "123": 2.2983551025390626e-05,
#     "88": 2.353191375732422e-05,
#     "61": 2.2840499877929687e-05,
#     "50": 2.350807189941406e-05,
#     "116": 2.44140625e-05,
#     "36": 2.300739288330078e-05,
#     "94": 2.2816658020019532e-05,
#     "54": 2.3102760314941408e-05,
#     "65": 2.3484230041503906e-05,
#     "78": 2.3746490478515624e-05,
#     "33": 2.6106834411621094e-05,
#     "113": 2.3698806762695314e-05,
#     "91": 2.307891845703125e-05,
#     "5": 2.3102760314941408e-05,
#     "49": 2.3484230041503906e-05,
#     "89": 2.322196960449219e-05,
#     "60": 2.3055076599121094e-05,
#     "51": 2.3174285888671876e-05,
#     "117": 2.448558807373047e-05,
#     "37": 2.3031234741210936e-05,
#     "95": 2.307891845703125e-05,
#     "55": 2.2864341735839845e-05,
#     "64": 2.322196960449219e-05,
#     "81": 2.346038818359375e-05,
#     "103": 2.460479736328125e-05,
#     "23": 2.5153160095214844e-05,
#     "68": 2.300739288330078e-05,
#     "59": 2.3603439331054688e-05,
#     "12": 2.2983551025390626e-05,
#     "70": 2.372264862060547e-05,
#     "99": 2.3484230041503906e-05,
#     "41": 2.3102760314941408e-05,
#     "16": 2.307891845703125e-05,
#     "85": 2.3245811462402344e-05,
#     "27": 2.307891845703125e-05,
#     "107": 2.2935867309570313e-05,
#     "9": 2.3055076599121094e-05,
#     "45": 2.3055076599121094e-05,
#     "74": 2.319812774658203e-05,
#     "93": 2.3102760314941408e-05,
#     "31": 2.3055076599121094e-05,
#     "111": 2.3031234741210936e-05,
#     "7": 2.2983551025390626e-05,
#     "120": 2.3055076599121094e-05,
#     "62": 2.3484230041503906e-05,
#     "109": 2.3150444030761717e-05,
#     "29": 2.2959709167480468e-05,
#     "18": 2.3245811462402344e-05,
#     "53": 2.3102760314941408e-05,
#     "124": 2.2912025451660155e-05,
#     "97": 2.446174621582031e-05,
#     "115": 2.2983551025390626e-05,
#     "35": 2.338886260986328e-05,
#     "57": 2.467632293701172e-05,
#     "66": 2.3031234741210936e-05,
#     "101": 2.3150444030761717e-05,
#     "21": 2.3150444030761717e-05,
#     "83": 2.3031234741210936e-05,
#     "10": 2.3555755615234374e-05,
#     "39": 2.2912025451660155e-05,
#     "119": 2.3102760314941408e-05,
#     "72": 2.319812774658203e-05,
#     "43": 2.3627281188964842e-05,
#     "14": 2.3031234741210936e-05,
#     "25": 2.3698806762695314e-05,
#     "105": 2.3603439331054688e-05,
#     "87": 2.334117889404297e-05,
#     "47": 2.338886260986328e-05,
#     "76": 2.3055076599121094e-05,
#     "100": 2.3102760314941408e-05,
#     "20": 2.3031234741210936e-05,
#     "82": 2.307891845703125e-05,
#     "11": 2.3174285888671876e-05,
#     "73": 2.3245811462402344e-05,
#     "38": 2.3174285888671876e-05,
#     "118": 2.307891845703125e-05,
#     "42": 2.3102760314941408e-05,
#     "15": 2.3579597473144533e-05,
#     "24": 2.3484230041503906e-05,
#     "104": 2.4628639221191406e-05,
#     "86": 2.3627281188964842e-05,
#     "46": 2.3055076599121094e-05,
#     "77": 2.3150444030761717e-05,
#     "92": 2.307891845703125e-05,
#     "30": 2.3055076599121094e-05,
#     "110": 2.3150444030761717e-05,
#     "6": 2.4509429931640624e-05,
#     "121": 2.3579597473144533e-05,
#     "108": 2.2983551025390626e-05,
#     "28": 2.4271011352539062e-05,
#     "63": 2.372264862060547e-05,
#     "52": 2.319812774658203e-05,
#     "19": 2.353191375732422e-05,
#     "96": 2.3293495178222657e-05,
#     "114": 2.3627281188964842e-05,
#     "34": 2.346038818359375e-05,
#     "56": 2.4366378784179688e-05,
#     "67": 2.300739288330078e-05,
# }
data = json.load(open("../data/retrieval_scaling/gpu_results.json"))
visualization_times = data["visualization_times"]
embedding_times = data["embedding_times"]
similarity_computation_times = data["similarity_computation_times"]
with open("../data/retrieval_scaling/astar_results.csv", "r") as file:
    reader = csv.DictReader(file)
    astar_times = {row["name"].split(".")[0]: row["duration"] for row in reader}


# Convert string keys to integers for proper sorting
vis_times = {int(k): v for k, v in visualization_times.items()}
emb_times = {int(k): v for k, v in embedding_times.items()}
sim_times = {int(k): v for k, v in similarity_computation_times.items()}
# sim2_times = {int(k): v for k, v in sim2.items()}
total = {k: vis_times[k] + emb_times[k] + sim_times[k] for k in vis_times.keys()}

# Sort the data points by number of S-nodes
x_values = sorted(vis_times.keys())
vis_y = [vis_times[x] for x in x_values]
emb_y = [emb_times[x] for x in x_values]
sim_y = [sim_times[x] for x in x_values]
# sim2_y = [sim2_times[x] for x in x_values]
total_y = [total[x] for x in x_values]

# Create the plot
plt.figure(figsize=(10, 6))

# Plot each line with different styles and colors
plt.plot(x_values, vis_y, "b", label="Visualization Time")
plt.plot(x_values, emb_y, "r", label="Embedding Time")
plt.plot(x_values, sim_y, "g", label="Similarity Computation Time")
# plt.plot(x_values, sim2_y, "grey", label="Similarity Computation Time 2")
plt.plot(x_values, total_y, "orange", label="Total Processing Time")

# Customize the plot
plt.xlabel("Number of S-nodes")
plt.ylabel("Time (seconds)")
plt.title("Performance Scaling with Number of S-nodes")
plt.grid(True, linestyle="--", alpha=0.7)
plt.legend()

# Use logarithmic scale if the values span multiple orders of magnitude
# plt.yscale('log')  # Uncomment if needed

# Add minor gridlines
plt.grid(True, which="minor", linestyle=":", alpha=0.4)

# Rotate x-axis labels if they overlap
# plt.xticks(x_values, rotation=45)

# Adjust layout to prevent label cutoff
plt.tight_layout()

# Save the plot
plt.savefig("../data/scaling_analysis.png", dpi=300, bbox_inches="tight")
plt.close()

# Filter the data points for the keys in astar_times (4-20)
astar_keys = range(4, 21)
filtered_total_y = [total[k] for k in astar_keys if k in total]
filtered_astar_y = [
    float(astar_times[str(k)]) for k in astar_keys if str(k) in astar_times
]

# Create the second plot
plt.figure(figsize=(10, 6))

# Plot each line with different styles and colors
plt.plot(astar_keys, filtered_total_y, "orange", label="Total Processing Time")
plt.plot(astar_keys, filtered_astar_y, "purple", label="A* Search Time")

# Customize the plot
plt.xlabel("Number of S-nodes")
plt.ylabel("Time (seconds)")
plt.title("Total Vision-Based Processing Time vs A* Search Time")
plt.grid(True, linestyle="--", alpha=0.7)
plt.legend()

# Use logarithmic scale if the values span multiple orders of magnitude
# plt.yscale('log')  # Uncomment if needed

# Add minor gridlines
plt.grid(True, which="minor", linestyle=":", alpha=0.4)

# Rotate x-axis labels if they overlap
# plt.xticks(astar_keys, rotation=45)

# Adjust layout to prevent label cutoff
plt.tight_layout()

# Save the plot
plt.savefig("../data/total_vs_astar_analysis.png", dpi=300, bbox_inches="tight")
plt.close()
